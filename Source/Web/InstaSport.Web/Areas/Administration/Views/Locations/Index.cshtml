@{
    ViewBag.Title = "Manage Locations";
}

@(Html.Kendo().Grid<InstaSport.Web.Areas.Administration.Models.AdminLocationViewModel>()
      .Name("grid")
      .Columns(columns =>
      {
          columns.Bound(c => c.Name);
          columns.ForeignKey(p => p.CityId, (System.Collections.IEnumerable)ViewData["cities"], "Id", "Name")
                .Title("City").Width(200);
          columns.Bound(c => c.CreatedOn).Format("{0:HH:mm dd.MM.yyyy}");
          columns.Bound(c => c.ModifiedOn).Format("{0:HH:mm dd.MM.yyyy}");
          columns.Command(command => { command.Edit(); command.Destroy(); }).Width(180);
      })
      .ToolBar(toolbar => toolbar.Create())
      .ColumnMenu()
      .Editable(editable => editable.Mode(GridEditMode.PopUp))
      .Pageable()
      .Sortable(sortable =>
      {
          sortable.SortMode(GridSortMode.SingleColumn);
      })
      .Filterable()
      .Scrollable()
      .DataSource(dataSource => dataSource
          .Ajax()
          .Events(events => events.Error("error_handler"))
          .Model(model => model.Id(p => p.Id))
          .Read(read => read.Action("Locations_Read", "Locations"))
          .Create(read => read.Action("Locations_Create", "Locations"))
          .Update(update => update.Action("Locations_Update", "Locations"))
          .Destroy(destroy => destroy.Action("Locations_Destroy", "Locations"))
      )
)

@section scripts {
    <script type="text/javascript">
        function error_handler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                alert(message);
            }
        }
    </script>
}